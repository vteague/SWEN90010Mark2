module Storage is

  schema Container is
  dec
    contents : nat;
    capacity : nat
  pred
    contents <= capacity
  end Container;

  Light ::= on | off;

  schema Indicator is
  dec
    light : Light;
    reading : nat;
    danger_level : nat
  pred
    light = on <=> (reading <= danger_level)
  end Indicator;

  schema state is
  dec
    Container;
    Indicator
  pred
    reading = contents;
    capacity = 5000;
    danger_level = 50
  end state;

  schema init is
  pred
    capacity' = 5000;
    danger_level' = 50;
    contents' = 0
  end init;

  op schema FillOK is
  dec
    amount? : nat;
    report! : string
  pred
    pre contents + amount? <= capacity;
    contents' = contents + amount?;
    report! = "Ok";
    changes_only{contents, reading, light}
  end FillOK;

  op schema OverFill is
  dec
    amount? : nat;
    report! : string
  pred
    amount? + contents > capacity;
    report! = "Tank is overfull";
    changes_only{}
  end OverFill;

  Fill == (FillOK or OverFill)

end Storage
